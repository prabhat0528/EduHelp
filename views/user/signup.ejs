
<% layout("/layouts/boilerplate") %>

<div class="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-8 sm:mt-10">
  <div class="max-w-md mx-auto bg-white p-6 sm:p-8 rounded-lg shadow-md">
    <h1 class="text-center text-2xl sm:text-3xl font-bold text-gray-800 mb-6">Sign Up for EduHelp</h1>

    <form action="/signup" method="POST" class="space-y-6 needs-validation" novalidate id="signupForm">
      <!-- Username -->
      <div>
        <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
        <input
          type="text"
          id="username"
          name="username"
          required
          class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors"
        />
        <p id="usernameError" class="text-sm text-red-500 mt-1 hidden" role="alert">Username must be at least 3 characters long.</p>
      </div>

      <!-- Email -->
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors"
        />
        <p id="emailError" class="text-sm text-red-500 mt-1 hidden" role="alert">Please provide a valid email address.</p>
      </div>

      <!-- Password -->
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
        <input
          type="password"
          id="password"
          name="password"
          required
          class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors"
        />
        <p id="passwordError" class="text-sm text-red-500 mt-1 hidden" role="alert">Password must be at least 6 characters long.</p>
      </div>

      <!-- Role Selection -->
      <div>
        <label for="role" class="block text-sm font-medium text-gray-700">Sign Up As</label>
        <select
          id="role"
          name="role"
          required
          class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary transition-colors"
        >
          <option value="" disabled selected>Select your role</option>
          <option value="instructor">Instructor</option>
          <option value="student">Student</option>
        </select>
        <p id="roleError" class="text-sm text-red-500 mt-1 hidden" role="alert">Please select a role.</p>
      </div>

      <!-- Submit Button -->
      <div>
        <button
          type="submit"
          class="w-full sm:w-auto px-6 py-2.5 bg-secondary text-white rounded-lg hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 transition-colors"
        >
          Sign Up
        </button>
      </div>
    </form>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('signupForm');
  const usernameInput = document.getElementById('username');
  const emailInput = document.getElementById('email');
  const passwordInput = document.getElementById('password');
  const roleInput = document.getElementById('role');
  const usernameError = document.getElementById('usernameError');
  const emailError = document.getElementById('emailError');
  const passwordError = document.getElementById('passwordError');
  const roleError = document.getElementById('roleError');

  if (!form || !usernameInput || !emailInput || !passwordInput || !roleInput || !usernameError || !emailError || !passwordError || !roleError) {
    console.error('Form or input elements not found.');
    return;
  }

  form.addEventListener('submit', (e) => {
    let hasError = false;

    // Username validation
    if (usernameInput.value.trim().length < 3) {
      usernameError.classList.remove('hidden');
      usernameInput.classList.add('border-red-500');
      usernameInput.focus();
      hasError = true;
    } else {
      usernameError.classList.add('hidden');
      usernameInput.classList.remove('border-red-500');
    }

    // Email validation
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(emailInput.value.trim())) {
      emailError.classList.remove('hidden');
      emailInput.classList.add('border-red-500');
      if (!hasError) emailInput.focus();
      hasError = true;
    } else {
      emailError.classList.add('hidden');
      emailInput.classList.remove('border-red-500');
    }

    // Password validation
    if (passwordInput.value.trim().length < 6) {
      passwordError.classList.remove('hidden');
      passwordInput.classList.add('border-red-500');
      if (!hasError) passwordInput.focus();
      hasError = true;
    } else {
      passwordError.classList.add('hidden');
      passwordInput.classList.remove('border-red-500');
    }

    // Role validation
    if (!roleInput.value) {
      roleError.classList.remove('hidden');
      roleInput.classList.add('border-red-500');
      if (!hasError) roleInput.focus();
      hasError = true;
    } else {
      roleError.classList.add('hidden');
      roleInput.classList.remove('border-red-500');
    }

    if (hasError) {
      e.preventDefault();
    }
  });

  // Clear errors on input
  usernameInput.addEventListener('input', () => {
    if (usernameInput.value.trim().length >= 3) {
      usernameError.classList.add('hidden');
      usernameInput.classList.remove('border-red-500');
    }
  });

  emailInput.addEventListener('input', () => {
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (emailPattern.test(emailInput.value.trim())) {
      emailError.classList.add('hidden');
      emailInput.classList.remove('border-red-500');
    }
  });

  passwordInput.addEventListener('input', () => {
    if (passwordInput.value.trim().length >= 6) {
      passwordError.classList.add('hidden');
      passwordInput.classList.remove('border-red-500');
    }
  });

  roleInput.addEventListener('change', () => {
    if (roleInput.value) {
      roleError.classList.add('hidden');
      roleInput.classList.remove('border-red-500');
    }
  });
});
</script>
